{"version":3,"sources":["components/Nav.js","components/Header.js","components/Footer.js","pages/Inicio.js","components/ListaUsuarios.js","pages/Users.js","pages/Ocorrencias.js","pages/Page404.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","href","Component","Header","className","components_Nav","Footer","Inicio","ListaUsuarios","state","persons","_this2","this","axios","get","then","res","data","setState","width","map","person","key","id","name","email","React","Users","ListaUsuarios_ListaUsuarios","Ocorrencias","Page404","App","components_Header","BrowserRouter","Switch","Route","path","exact","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12bb1e94.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav>\n        <a href=\"inicio\">Início</a>\n        <a href=\"relatorios\">Relatórios</a>\n        <a href=\"ocorrencias\">Ocorrências</a>\n        <a href=\"disparo\">Disparo de Relatório</a>\n        <a href=\"users\">Usuários</a>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport Nav from './Nav';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1><i className=\"fas fa-chart-line\"></i> RelApdex</h1>\n        <Nav />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n          <address>\n              Developed by Golden Gate | Smiles - Direitos Reservados &copy; 2018\n          </address>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass Inicio extends Component {\n  render() {\n    return (\n      <section className=\"Inicio\">\n        <h2>Seja bem-vindo!</h2>\n\n            \n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        \n      </section>\n    );\n  }\n}\n\nexport default Inicio;\n","import React from 'react';\n\nimport axios from 'axios';\n\nexport default class ListaUsuarios extends React.Component {\n  state = {\n    persons: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\n      .then(res => {\n        const persons = res.data;\n        this.setState({ persons });\n      })\n  }\n\n  render() {\n    return (\n      <table className=\"lista-usuarios\">\n        <thead>\n          <tr width=\"100%\">\n            <th width=\"15%\">ID</th>\n            <th width=\"30%\">Nome</th>\n            <th width=\"30%\">E-mail</th>\n            <th width=\"25%\">Opções</th>\n          </tr>\n        </thead>\n        <tbody>\n          { this.state.persons.map(person => <tr key={person.id}>\n            <td>{person.id}</td>\n            <td>{person.name}</td>\n            <td>{person.email}</td>\n            <td>\n              <button className=\"fas fa-user\"></button>\n              <button className=\"fas fa-edit\"></button>\n              <button className=\"fas fa-trash\"></button>\n            </td>\n          </tr>)}\n        </tbody>\n      </table>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport ListaUsuarios from '../components/ListaUsuarios';\n\nclass Users extends Component {\n  render() {\n    return (\n      <section className=\"Users\">\n        <h2>Lista de Usuários</h2>\n\n            <ListaUsuarios/>\n        {/* <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p> */}\n        \n      </section>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\n\nclass Ocorrencias extends Component {\n  render() {\n    return (\n      <section className=\"Ocorrencias\">\n        <h2>Ocorrências</h2>\n\n            \n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        <p>Loren Ipsum....</p>\n        \n      </section>\n    );\n  }\n}\n\nexport default Ocorrencias;\n","import React, { Component } from 'react';\n\nclass Page404 extends Component {\n  render() {\n    return (\n      <section className=\"Page404\">\n        <h2>Erro 404</h2>\n        <h3>Página não encontrada:</h3>\n        <p>&nbsp;</p>\n        <p>Por favor, verifique se a página em que está tentando acessar existe, caso contrário entre em contato com o seu administrador sistema para verificar o que está acontecendo.</p>\n        <p>&nbsp;</p>\n        <p>Atenciosamente</p>\n        <p>Departamento de Deenvolvimento</p>\n      </section>\n    );\n  }\n}\n\nexport default Page404;\n","import React, { Component } from 'react';\n//import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Inicio from './pages/Inicio';\nimport Users from './pages/Users';\nimport Ocorrencias from './pages/Ocorrencias';\nimport Page404 from './pages/Page404';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n//import './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <Header />\n          <BrowserRouter>\n              <Switch>\n                  <Route path=\"/\" exact={true} component={Inicio} />\n                  <Route path=\"/inicio\" exact={true} component={Inicio} />\n                  <Route path=\"/users\" exact={true} component={Users} />\n                  <Route path=\"/ocorrencias\" component={Ocorrencias} />\n                  <Route path='*' component={Page404} />\n              </Switch>\n          </ BrowserRouter>\n        <Footer />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\n// ReactDOM.render(\n//     <BrowserRouter>\n//         <Switch>\n//             <Route path=\"/\" exact={true} component={App} />\n//             <Route path=\"/ocorrencias\" component={Ocorrencias} />\n//             <Route path='*' component={404} />\n//         </Switch>\n//     </ BrowserRouter>\n//     , document.getElementById('root'));\n//     serviceWorker.unregister();\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}